{"ast":null,"code":"export const homeWorkReducer = (state, action) => {\n  // need to fix any\n  switch (action.type) {\n    case 'sort':\n      {\n        // by name\n        const newState = [...state].sort((a, b) => {\n          if (a.name > b.name) return -1;\n        });\n        return state; // need to fix\n      }\n    case 'check':\n      {\n        return state; // need to fix\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["homeWorkReducer","state","action","type","newState","sort","a","b","name"],"sources":["/Users/vladroubo/project/homework-front-main/2-спринт/src/s2-homeworks/hw08/bll/homeWorkReducer.ts"],"sourcesContent":["import {UserType} from '../HW8'\n\ntype ActionType =\n    | { type: 'sort'; payload: 'up' | 'down' }\n    | { type: 'check'; payload: number }\n\nexport const homeWorkReducer = (state: UserType[] , action: ActionType): UserType[] => { // need to fix any\n    switch (action.type) {\n        case 'sort': { // by name\nconst newState = [...state].sort((a, b) => {\n    if(a.name > b.name) return -1\n\n})\n            return state // need to fix\n        }\n        case 'check': {\n\n            return state // need to fix\n        }\n        default:\n            return state\n    }\n}\n"],"mappings":"AAMA,OAAO,MAAMA,eAAe,GAAGA,CAACC,KAAiB,EAAGC,MAAkB,KAAiB;EAAE;EACrF,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MAAE;QAAE;QACvB,MAAMC,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACvC,IAAGD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEjC,CAAC,CAAC;QACU,OAAOP,KAAK,EAAC;MACjB;IACA,KAAK,OAAO;MAAE;QAEV,OAAOA,KAAK,EAAC;MACjB;IACA;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}