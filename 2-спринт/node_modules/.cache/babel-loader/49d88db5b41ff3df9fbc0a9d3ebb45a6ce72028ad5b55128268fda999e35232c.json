{"ast":null,"code":"var _jsxFileName = \"/Users/vladroubo/project/homework-front-main/2-\\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/src/s2-homeworks/hw01/message/Message.tsx\";\nimport React from 'react';\nimport s from './Message.module.css';\n\n// нужно создать правильный тип вместо any\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// нужно отобразить приходящие данные\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw1-message-' + props.message.id,\n    className: s.message,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.imageAndText,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: 'hw1-avatar-' + props.message.id,\n        src: props.message.user.avatar,\n        alt: \"user avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.text,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'hw1-name-' + props.message.id,\n          className: s.name,\n          children: props.message.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: 'hw1-text-' + props.message.id,\n          className: s.messageText,\n          children: props.message.message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw1-time-' + props.message.id,\n      className: s.time,\n      children: props.message.message.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","Message","props","id","message","className","children","imageAndText","src","user","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","name","messageText","time","_c","$RefreshReg$"],"sources":["/Users/vladroubo/project/homework-front-main/2-спринт/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport s from './Message.module.css'\nimport {message0, MessageType} from \"../HW1\";\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n\n                    src={props.message.user.avatar}\n                    alt=\"user avatar\"\n\n                />\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n\n                        {props.message.user.name}\n\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                      {props.message.message.text}\n                    </pre>\n                </div>\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {props.message.message.time}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;;AAGpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA;AACA,MAAMC,OAAO,GAAIC,KAAuB,IAAK;EACzC,oBACIF,OAAA;IAAKG,EAAE,EAAE,cAAc,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;IAACE,SAAS,EAAEP,CAAC,CAACM,OAAQ;IAAAE,QAAA,gBAC7DN,OAAA;MAAKK,SAAS,EAAEP,CAAC,CAACS,YAAa;MAAAD,QAAA,gBAC3BN,OAAA;QACIG,EAAE,EAAE,aAAa,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;QAErCK,GAAG,EAAEN,KAAK,CAACE,OAAO,CAACK,IAAI,CAACC,MAAO;QAC/BC,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC,eACFf,OAAA;QAAKK,SAAS,EAAEP,CAAC,CAACkB,IAAK;QAAAV,QAAA,gBACnBN,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACmB,IAAK;UAAAX,QAAA,EAEtDJ,KAAK,CAACE,OAAO,CAACK,IAAI,CAACQ;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvB,CAAC,eACNf,OAAA;UAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;UAACE,SAAS,EAAEP,CAAC,CAACoB,WAAY;UAAAZ,QAAA,EAC/DJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACY;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNf,OAAA;MAAKG,EAAE,EAAE,WAAW,GAAGD,KAAK,CAACE,OAAO,CAACD,EAAG;MAACE,SAAS,EAAEP,CAAC,CAACqB,IAAK;MAAAb,QAAA,EACtDJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACe;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAK,EAAA,GA3BKnB,OAAO;AA6Bb,eAAeA,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}