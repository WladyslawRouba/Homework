{"ast":null,"code":"var _jsxFileName = \"/Users/vladroubo/project/homework-front-main/2-\\u0441\\u043F\\u0440\\u0438\\u043D\\u0442/src/s2-homeworks/hw07/common/c6-SuperRadio/SuperRadio.tsx\";\nimport React from 'react';\nimport s from './SuperRadio.module.css';\n\n// тип пропсов обычного спана\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperRadio = ({\n  id,\n  name,\n  className,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  spanProps,\n  ...restProps\n}) => {\n  const onChangeCallback = e => {\n    if (onChange) onChange(e);\n    if (onChangeOption && options) {\n      const selectedId = e.currentTarget.value;\n      const selectedOption = options.find(o => String(o.id) === selectedId);\n      if (selectedOption) onChangeOption(selectedOption);\n    }\n  };\n  const finalRadioClassName = s.radio + (className ? ' ' + className : '');\n  const spanClassName = s.span + (spanProps !== null && spanProps !== void 0 && spanProps.className ? ' ' + spanProps.className : '');\n  const mappedOptions = options ? options.map(o => /*#__PURE__*/_jsxDEV(\"label\", {\n    className: s.label,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: id + '-input-' + o.id,\n      className: finalRadioClassName,\n      type: 'radio'\n      // name, checked, value делают студенты\n      ,\n      name: name,\n      value: String(o.id),\n      checked: String(value) === String(o.id),\n      onChange: onChangeCallback,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: id + '-span-' + o.id,\n      ...spanProps,\n      className: spanClassName,\n      children: o.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, name + '-' + o.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 15\n  }, this)) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.options,\n    children: mappedOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n_c = SuperRadio;\nexport default SuperRadio;\nvar _c;\n$RefreshReg$(_c, \"SuperRadio\");","map":{"version":3,"names":["React","s","jsxDEV","_jsxDEV","SuperRadio","id","name","className","options","value","onChange","onChangeOption","spanProps","restProps","onChangeCallback","e","selectedId","currentTarget","selectedOption","find","o","String","finalRadioClassName","radio","spanClassName","span","mappedOptions","map","label","children","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vladroubo/project/homework-front-main/2-спринт/src/s2-homeworks/hw07/common/c6-SuperRadio/SuperRadio.tsx"],"sourcesContent":["import React, {\n    ChangeEvent,\n    InputHTMLAttributes,\n    DetailedHTMLProps,\n    HTMLAttributes,\n} from 'react'\nimport s from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n    InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n>\n\ntype SuperRadioPropsType = Omit<DefaultRadioPropsType, 'type'> & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({\n    id,\n    name,\n    className,\n    options,\n    value,\n    onChange,\n    onChangeOption,\n    spanProps,\n    ...restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChange) onChange(e)\n\n        if (onChangeOption && options) {\n            const selectedId = e.currentTarget.value\n            const selectedOption = options.find(o => String(o.id) === selectedId)\n            if (selectedOption) onChangeOption(selectedOption)\n        }\n    }\n\n    const finalRadioClassName = s.radio + (className ? ' ' + className : '')\n    const spanClassName = s.span + (spanProps?.className ? ' ' + spanProps.className : '')\n\n    const mappedOptions: any[] = options\n        ? options.map((o) => (\n              <label key={name + '-' + o.id} className={s.label}>\n                  <input\n                      id={id + '-input-' + o.id}\n                      className={finalRadioClassName}\n                      type={'radio'}\n                      // name, checked, value делают студенты\n                      name={name}\n                      value={String(o.id)}\n                      checked={String(value) === String(o.id)}\n                      onChange={onChangeCallback}\n                      {...restProps}\n                  />\n                  <span\n                      id={id + '-span-' + o.id}\n                      {...spanProps}\n                      className={spanClassName}\n                  >\n                      {o.value}\n                  </span>\n              </label>\n          ))\n        : []\n\n    return <div className={s.options}>{mappedOptions}</div>\n}\n\nexport default SuperRadio\n"],"mappings":";AAAA,OAAOA,KAAK,MAKL,OAAO;AACd,OAAOC,CAAC,MAAM,yBAAyB;;AAMvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAaA,MAAMC,UAAyC,GAAGA,CAAC;EAC/CC,EAAE;EACFC,IAAI;EACJC,SAAS;EACTC,OAAO;EACPC,KAAK;EACLC,QAAQ;EACRC,cAAc;EACdC,SAAS;EACT,GAAGC;AACP,CAAC,KAAK;EACF,MAAMC,gBAAgB,GAAIC,CAAgC,IAAK;IAC3D,IAAIL,QAAQ,EAAEA,QAAQ,CAACK,CAAC,CAAC;IAEzB,IAAIJ,cAAc,IAAIH,OAAO,EAAE;MAC3B,MAAMQ,UAAU,GAAGD,CAAC,CAACE,aAAa,CAACR,KAAK;MACxC,MAAMS,cAAc,GAAGV,OAAO,CAACW,IAAI,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAACf,EAAE,CAAC,KAAKW,UAAU,CAAC;MACrE,IAAIE,cAAc,EAAEP,cAAc,CAACO,cAAc,CAAC;IACtD;EACJ,CAAC;EAED,MAAMI,mBAAmB,GAAGrB,CAAC,CAACsB,KAAK,IAAIhB,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;EACxE,MAAMiB,aAAa,GAAGvB,CAAC,CAACwB,IAAI,IAAIb,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEL,SAAS,GAAG,GAAG,GAAGK,SAAS,CAACL,SAAS,GAAG,EAAE,CAAC;EAEtF,MAAMmB,aAAoB,GAAGlB,OAAO,GAC9BA,OAAO,CAACmB,GAAG,CAAEP,CAAC,iBACVjB,OAAA;IAA+BI,SAAS,EAAEN,CAAC,CAAC2B,KAAM;IAAAC,QAAA,gBAC9C1B,OAAA;MACIE,EAAE,EAAEA,EAAE,GAAG,SAAS,GAAGe,CAAC,CAACf,EAAG;MAC1BE,SAAS,EAAEe,mBAAoB;MAC/BQ,IAAI,EAAE;MACN;MAAA;MACAxB,IAAI,EAAEA,IAAK;MACXG,KAAK,EAAEY,MAAM,CAACD,CAAC,CAACf,EAAE,CAAE;MACpB0B,OAAO,EAAEV,MAAM,CAACZ,KAAK,CAAC,KAAKY,MAAM,CAACD,CAAC,CAACf,EAAE,CAAE;MACxCK,QAAQ,EAAEI,gBAAiB;MAAA,GACvBD;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFhC,OAAA;MACIE,EAAE,EAAEA,EAAE,GAAG,QAAQ,GAAGe,CAAC,CAACf,EAAG;MAAA,GACrBO,SAAS;MACbL,SAAS,EAAEiB,aAAc;MAAAK,QAAA,EAExBT,CAAC,CAACX;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,GAlBC7B,IAAI,GAAG,GAAG,GAAGc,CAAC,CAACf,EAAE;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAmBtB,CACV,CAAC,GACF,EAAE;EAER,oBAAOhC,OAAA;IAAKI,SAAS,EAAEN,CAAC,CAACO,OAAQ;IAAAqB,QAAA,EAAEH;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D,CAAC;AAAAC,EAAA,GAlDKhC,UAAyC;AAoD/C,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}